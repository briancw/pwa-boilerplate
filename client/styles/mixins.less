// lato
// Standard usage:
// .lato(500)[];
// Gives an element the font face lato.
.lato(@weight: 400) {
    font-family: 'Lato', sans-serif;
    font-weight: @weight;
}

.grid-breakpoints() {
    @xs: 0;
    @sm: 480px;
    @md: 768px;
    @lg: 1200px;
    @xl: 2200px;
};

// px
// Standard usage:
// font-size: .px(@min-fz)[];
// Converts the given scalar to px.
.px(@scalar) {
    @return: @scalar * 1px;
}

// p
// Standard usage:
// font-size: .p(@min-width)[];
// Converts the given scalar to percent.
.p(@scalar) {
    @return: @scalar * 1%;
}

// above
// Standard usage:
//.above(560px; {
//    background: red;
// });
// OR:
// .above(md, {
//    background: red;
// });
.above(@width; @rules) when not (isnumber(@width)) {
    @media screen and (min-width: .grid-breakpoints[@@width]) {
        @rules();
    }
}

.above(@width; @rules) when (isnumber(@width)) {
    @media screen and (min-width: @width) {
        @rules();
    }
}

.below(@width; @rules) when not (isnumber(@width)) {
    @media screen and (max-width: .grid-breakpoints[@@width] - 1px) {
        @rules();
    }
}

.below(@width; @rules) when (isnumber(@width)) {
    @media screen and (max-width: @width) {
        @rules();
    }
}

// aria :focus-visible
// Standard usage:
// .aria-visible();
// Use this to visually hide something that you want to be visible to screen readers.
// Cafrefully consider if thats something you want to do.
.aria-visible() {
    clip-path: inset(100%);
    clip: rect(1px 1px 1px 1px); /* IE 6/7 */
    clip: rect(1px, 1px, 1px, 1px);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap; /* added line */
    width: 1px;
}

// Responsive ratio
// Standard usage:
// @include ratio(16; 9);
// @include ratio(16; 9; true);
.ratio(@x; @y; @pseudo: false) when (@pseudo = true) {
    @padding: unit((@y / @x) * 100, %);
    &::before {
        content: ' ';
        display: block;
        position: relative;
        width: 100%;
        padding-top: @padding;
    }
}

.ratio(@x; @y; @pseudo: false) when not (@pseudo = true) {
    @padding: unit((@y / @x) * 100, %);
    padding-top: @padding;
}